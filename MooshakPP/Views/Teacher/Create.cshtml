@model MooshakPP.Models.ViewModels.CreateAssignmentViewModel
@{
    ViewBag.Title = "Create";
}

<div class="collapse collapseExample">
    <div class="well">

        @foreach (var course in Model.courses)
        {
            {
                @Html.ActionLink(@course.name, "Create", "Teacher", new { courseid = course.ID }, new { @class="btn btn-default"})
            }
        }
    </div>
</div>


<div class="row">
    <div class="col-md-6">
        <h2>@Model.currentCourse.name</h2>
    </div>

    <div class="col-md-6">
        @Html.ActionLink("Back", "Index", "Teacher", new { courseid = Model.currentCourse.ID }, new { @class = "btn btn-primary backbutton" })
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <h3>Create assignment</h3>
        <div class="col-md-6">

                @using (Html.BeginForm("Create", "Teacher", new { courseID = Model.currentCourse.ID, assignmentID = Model.currentAssignment.ID }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.EditorFor(m => m.currentAssignment.title, new { htmlattributes = new { @class = "form-control", @placeholder = "Enter assignment name" } })
                    @Html.EditorFor(s => s.start, new { htmlattributes = new { @class = "form-control datepicker", @placeholder = "Enter due date" } }) 
                    @Html.EditorFor(s => s.due, new { htmlattributes = new { @class = "form-control datepicker", @placeholder = "Enter due date" } })
                    <!--<input class="form-control datepicker" data-val="true" id="start" name="start" placeholder="Enter opening date" type="text" value="" >
                    <input class="form-control datepicker" data-val="true" id="due" name="due" placeholder="Enter due date" type="text" value="">-->
                </div>

                <div class="form-group">
                    @if (Model.currentAssignment.ID == 0)
                    {
                        <button name="action" value="create" class="btn btn-success">Create assignment</button>
                    }
                    else
                    {
                        <button name="action" value="edit" class="btn btn-success">Finish edit</button>
                        @Html.ActionLink("Create new", "Create", "Teacher", new { courseid = Model.currentCourse.ID}, new { @class="btn btn-default"})
                    }
                </div>
                }
        </div>
    </div>

    <div class="col-md-6">
        <h3>Existing assignments</h3>
        @if (Model.currentAssignment != null)
        {
            using (Html.BeginForm("Create", "Teacher", new { courseID = Model.currentCourse.ID, assignmentID = (int?)Model.currentAssignment.ID }, FormMethod.Post, new { @class = "interactivelist" }))
        {
            <div class="courselist">
                <table>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var assign in Model.assignments)
                            {
                                <tr>
                                        <td>@Html.ActionLink(@assign.title, "Create", "Teacher", new { courseid = @assign.courseID, assignmentid = @assign.ID }, null)</td >
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

            <hr />
                @Html.ActionLink("Manage milestones", "AddMilestones", "Teacher", new { assignmentid = Model.currentAssignment.ID }, new { @class = "btn btn-success" })
                <button name="action" value="delete" class="btn btn-danger">Delete selected assignment</button>
        }
        }
    </div>
</div>

@section scripts
{
    <script src="@Url.Content("~/Scripts/datepicker.js")"></script>
    <script src="@Url.Content("~/Scripts/interactivelist.js")"></script>
}