@model MooshakPP.Models.ViewModels.IndexViewModel
@{
    ViewBag.Title = "Index";
}
<!--not ready just a setup-->

<div class="collapse collapseExample">
    <div class="well">
        @if (Model.courses != null)
        {
            foreach (var course in Model.courses)
            {
                if (User.IsInRole("student"))
                {
                    @Html.ActionLink(@course.name, "Index", "Student", new { courseid = course.ID }, new { @class = "btn btn-default" }) 
                }
                else if (User.IsInRole("teacher"))
                {
                    @Html.ActionLink(@course.name, "Index", "Teacher", new { courseid = course.ID }, new { @class = "btn btn-default" }) 
                }
            }
        }
        else
        {
            <p>You are currently not registered in a course</p>
        }
    </div>
</div>

@if (Model.courses != null)
{
    
<div class="col-md-6">

    <h2>@Model.currentCourse.name</h2>

</div>

    <div class="teacher-margin">
        @if (Model.currentCourse != null)
        {
            if (User.IsInRole("teacher"))
            {
                <div class="teacher-links">@Html.ActionLink("Recover deleted assignments", "RecoverAssignment", "Teacher", null, new { @class = "btn btn-default" })</div>
            }

            <div class="row">
                @if (User.IsInRole("teacher"))
                {
                    <div class="teacher-links prump">@Html.ActionLink("Manage assignments", "Create", "Teacher", new { courseid = Model.currentCourse.ID }, new { @class = "btn btn-default" })</div>

                }
                <div class="row">
                    <div class="col-md-6">
                        <div class="assignment-list">
                            <a class="btn btn-default" id="course-assignments" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="true">
                                @if (Model.currentAssignment == null || Model.currentAssignment.ID == 0)
                                {
                                    <span>All Assignments</span>
                                }
                                else
                                {
                                    <span>@Model.currentAssignment.title</span>
                                }
                                <span class="caret "></span>
                            </a>

                            <ul class="dropdown-menu">
                                @if (Model.assignments != null)
                                {
                                    foreach (var assignment in Model.assignments)
                                    {
                                        if (User.IsInRole("student"))
                                        {
                                            <li>@Html.ActionLink(@assignment.title, "Index", "Student", new { courseid = assignment.courseID, assignmentid = assignment.ID }, null)</li>
                                        }
                                        else if (User.IsInRole("teacher"))
                                        {
                                            <li>@Html.ActionLink(@assignment.title, "Index", "Teacher", new { courseid = assignment.courseID, assignmentid = assignment.ID }, null)</li>
                                        }
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
        

<div class="row">
    <div class="col-md-6">
        @if (Model.milestones != null && Model.currentMilestone != null)
        {
            //checks if the logged in user is a teacher or student
            string role;
            if (User.IsInRole("teacher"))
            {
                role = "teacher";
            }
            else
            {
                role = "student";
            }

            using (Html.BeginForm("Index", role, new { assignID = Model.currentAssignment.ID, milestoneid = Model.currentMilestone.ID }, FormMethod.Post, new { @class = "interactiveList" }))
            {
                <div class="courselist table-custom">
                    <table class="table table-striped table-hover" >
                        <thead>
                            <tr>                          
                                @if(Model.currentAssignment.ID != 0 && Model.milestones.Count != 0)
                                {
                                    <th>Milestones in @Model.currentAssignment.title</th>
                                }
                                else if (Model.currentAssignment.ID == 0)
                                {
                                    <th>No assignment selected</th>
                                }
                                else
                                {
                                    <th>No milestones in this assignment</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.milestones != null)
                            {
                                foreach (var m in Model.milestones)
                                {
                                    <tr>
                                        <td>@Html.ActionLink(@m.name, "Index", role, new { assignmentid = @m.assignmentID, milestoneid = @m.ID }, null)</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td>No milestones yet</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        }
    </div>


    <div class="col-md-6">
        @if (User.IsInRole("student"))
        {
            using (Html.BeginForm("Index", "student", new { courseID = Model.currentCourse.ID, assignmentID = Model.currentMilestone.assignmentID, milestoneid = Model.currentMilestone.ID},FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                <input name="file" type="file" id="upld" />
                <input type="submit" value="submit" disabled id="submit" class="btn btn-default test" />
                @Html.ValidationMessageFor(m => m, "", new { @class = "text-danger" })
            }
        }
        else if (User.IsInRole("teacher"))
        {
            using (Html.BeginForm("Index", "teacher", new { courseid = Model.currentCourse.ID, assignmentid = Model.currentAssignment.ID, milestoneid = Model.currentMilestone.ID }, FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                <input name="file" type="file" />
                <input type="submit" value="submit" id="submit" class="btn btn-default" />
            }
        }
    </div>

</div>

<div class="row">
    <div class="col-lg-10">
        <ul class="nav nav-tabs" role="tablist">
            @if (User.IsInRole("student"))
            {
                <li><a href="#mysubmissions" class="text-muted" aria-controls="home" role="tab" data-toggle="tab">My Submissions</a></li>
            }
            <li><a href="#allsubmissions" aria-controls="profile" role="tab" data-toggle="tab">All Submissions</a></li>
            @if(User.IsInRole("teacher"))
            {
                <li><a href="#bestsubmissions" aria-controls="profile" role="tab" data-toggle="tab">Best Submissions</a></li>
            }
            <li class="active"><a href="#description" aria-controls="profile" role="tab" data-toggle="tab">Description</a></li>
        </ul>

        <div class="tab-content table">
            @if (User.IsInRole("student"))
            {
                <div id="mysubmissions" class="tab-pane fade">
                    @if (Model.mySubmissions != null)
                    {
                        { Html.RenderPartial("SubmitPartial", Model.mySubmissions); }
                    }
                </div>
            }
            @if (User.IsInRole("teacher"))
            {
                <div id="bestsubmissions" class="tab-pane fade">
                    <h3>Valdimir Putin is Overrated</h3>
                    @{ Html.RenderPartial("BestSubmissions", Model.bestSubmissions);}
                </div>
            }
            <div id="allsubmissions" class="tab-pane fade">
                @if (Model.allSubmissions != null)
                {
                    { Html.RenderPartial("AllSubmissions", Model.allSubmissions);}
                }
            </div>
            <div id="description" class="tab-pane fade in active">
                @{ Html.RenderPartial("DescriptionPartial", Model);}
            </div>
        </div>
    </div>
</div>
}
else
{
    <h2>You are not registered in a course</h2>
    <h4>Please contact an administrator or a teacher</h4>
}