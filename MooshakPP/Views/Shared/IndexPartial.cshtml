@model MooshakPP.Models.ViewModels.IndexViewModel
@{
    ViewBag.Title = "Index";
}
<!--not ready just a setup-->

<div class="collapse collapseExample">
    <div class="well">
        @if (Model.courses != null)
        {
            foreach (var course in Model.courses)
            {
                if (User.IsInRole("student"))
                {
                    @Html.ActionLink(@course.name, "Index", "Student", new { courseid = course.ID }, new { @class = "btn btn-default" }) 
                }
                else if (User.IsInRole("teacher"))
                {
                    @Html.ActionLink(@course.name, "Index", "Teacher", new { courseid = course.ID }, new { @class = "btn btn-default" }) 
                }
            }
        }
        else
        {
            <p>You are currently not registered in a course</p>
        }
    </div>
</div>

@if (Model.courses != null)
{
    <div class="col-md-10">

    <h2>@Model.currentCourse.name</h2>

</div>

<div class="row">
    <div class="col-md-10">
        <a class="btn btn-default dropdown-togglee" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="true">
            @if(Model.currentAssignment == null)
            {
                <span>Assignments</span>
            }
            else
            {
                @Model.currentAssignment.title
            }
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            @if (Model.assignments != null)
            {
                foreach (var assign in Model.assignments)
                {
                    if (User.IsInRole("student"))
                    {
                        <li>@Html.ActionLink(@assign.title, "Index", "Student", new { courseid = assign.courseID, assignmentid = assign.ID }, null)</li>
                    }
                    else if (User.IsInRole("teacher"))
                    {
                        <li>@Html.ActionLink(@assign.title, "Index", "Teacher", new { courseid = assign.courseID, assignmentid = assign.ID }, null)</li>
                    }
                }
            }
        </ul>

@if (Model.currentCourse != null)
{
    if (User.IsInRole("teacher"))
    {
                @Html.ActionLink("Recover deleted assignments", "RecoverAssignments", "Teacher", null, new { @class = "btn btn-primary"})
                @Html.ActionLink("Manage assignments", "Create", "Teacher", new { courseid = Model.currentCourse.ID }, new { @class = "btn btn-primary" })
    }
}
    </div>
</div>


<div class="col-md-10">
        @if (Model.milestones != null && Model.currentMilestone != null)
        {
            //checks if the logged in user is a teacher or student
            string role;
            if(User.IsInRole("teacher"))
            {
                role = "teacher";
            }
            else
            {
                role = "student";
            }

            using (Html.BeginForm("Index", role, new { assignID = Model.currentAssignment.ID, milestoneID = Model.currentMilestone.ID }, FormMethod.Post, new { @class = "interactiveList" }))
            {
                <div class="courselist">
                    <table>
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var m in Model.milestones)
                                {
                                    <tr>
                                        <td>@Html.ActionLink(@m.name, "Index", role, new { assignmentid = @m.assignmentID, milestoneid = @m.ID }, null)</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <hr />
                </div>
            }
    }
</div>


<div class="row">
    <div class="col-md-10">
        @using (Html.BeginForm("Submit", "Student", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            <input name="file" type="file" />
            <input type="submit" value="submit" id="submit" class="btn btn-default" />
        }
    </div>
</div>




<div class="col-lg-10">
    <ul class="nav nav-tabs" role="tablist">
            <li><a href="#mysubmissions" aria-controls="home" role="tab" data-toggle="tab">MySubmission</a></li>
            <li><a href="#allsubmissions" aria-controls="profile" role="tab" data-toggle="tab">AllSubmission</a></li>
            <li class="active"><a href="#description" aria-controls="profile" role="tab" data-toggle="tab">Description</a></li class="active">
    </ul>

    <div class="tab-content">
        <div id="mysubmissions" class="tab-pane fade">
            <!--@{ Html.RenderPartial("SubmitPartial", Model);}-->
            <h3>Krisi liktar eins og pikuprump</h3>
        </div>
        <div id="allsubmissions" class="tab-pane fade">
            <h3>DickButt</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
        </div>
            <div id="description" class="tab-pane fade in active">
            @{ Html.RenderPartial("DescriptionPartial", Model);}
        </div>
    </div>
</div>
}
else
{
    <h2>You are not registered in a course</h2>
    <h4>Please contact an administrator or a teacher</h4>
}